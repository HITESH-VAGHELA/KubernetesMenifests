apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: myapp-ingress
spec: 
  rules:
  - host: myapp.com
    http:
      paths:
      - backend:
          serviceName: myapp-internal-service
          servicePort: 8080

# Internal Service and Ingress Configurations
#Internal Service:
apiVersion: v1
kind: Service
metadata:
  name: myapp-internal-service
spec:
  selector: 
    app: myapp
  ports:
    - protocol: TCP
      port: 8080
      targerPort: 8080

#Ingress:
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata: 
  name: myapp-ingress
spec:
  rules:
  - host: myapp.com
    http:
      paths:
      - backend:
          serviceName: myapp-internal-service #should be internal service name
          servicePort: 8080  #should be internal service port

#Multiple Paths for same host
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata: 
  name: simple-fanout-example
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: myapp.com
    http:
      paths:
      - path: /analytics
        backend:
          serviceName: analytics-service
          servicePort: 3000
      - path: /shopping
        backend:
          serviceName: shopping-service
          servicePort: 8080

#Multiple sub-domain or domains
apiVersion: networking.k8s.io/v1beta1
kinf: Ingress
metadata:
  name: name-virtual-host-ingress
spec:
  rules:
  - host: analytics.myapp.com
    http:
      paths:
        backend: 
          serviceName: analytics-service
          servicePort: 3000
  - host: shopping.myapp.com
    http:
      paths:
        backend:
          serviceName: shopping-service
          servicePort: 8080